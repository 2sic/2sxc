using Microsoft.AspNetCore.Http;
using Oqtane.Models;
using Oqtane.Repository;
using Oqtane.Shared;
using ToSic.Lib.Services;
using ToSic.Sxc.Oqt.Shared.Interfaces;
using ToSic.Sxc.Oqt.Shared.Models;
using HtmlHelper = ToSic.Sxc.Oqt.Shared.Helpers.HtmlHelper;

namespace ToSic.Sxc.Oqt.Server.Services;

internal class OqtPrerenderService(IHttpContextAccessor httpContextAccessor, IThemeRepository themes)
    : ServiceBase($"Oqt.PrerndSrv"), IOqtPrerenderService
{
    public string GetPrerenderHtml(bool isPrerendered, OqtViewResultsDto viewResults, SiteState siteState, string themeType)
    {
        try
        {
            if (!isPrerendered || !UsePrerender) return string.Empty;

            var prerenderHtmlFragment = string.Empty;
            prerenderHtmlFragment = HtmlHelper.ManageStyleSheets(prerenderHtmlFragment, viewResults, siteState.Alias, Theme(themeType).Name, Html);
            prerenderHtmlFragment = HtmlHelper.ManageScripts(prerenderHtmlFragment, viewResults, siteState.Alias, Html);
            prerenderHtmlFragment = HtmlHelper.ManageInlineScripts(prerenderHtmlFragment, viewResults, siteState.Alias, Html);
            prerenderHtmlFragment = SystemHtml(prerenderHtmlFragment);
            Html += prerenderHtmlFragment;
            return prerenderHtmlFragment;
        }
        catch (Exception e)
        {
            Log.Ex(e);
            return string.Empty;
        }
    }

    #region Validation
    public bool UsePrerender => _usePrerender ??= (HasUserAgentSignature() || CheckForKeyInQueryString("prerender"));
    private bool? _usePrerender;

    private bool HasUserAgentSignature()
    {
        var userAgent = httpContextAccessor.HttpContext?.Request.Headers["User-Agent"];
        return userAgent.HasValue && _userAgentSignatures.Exists(x => userAgent.Value.ToString().Contains(x, StringComparison.InvariantCultureIgnoreCase));
    }

    public bool CheckForKeyInQueryString(string key)
    {
        var queryCollection = httpContextAccessor.HttpContext?.Request.Query;
        return queryCollection != null && queryCollection.ContainsKey(key);
    }

    // based on https://raw.githubusercontent.com/monperrus/crawler-user-agents/master/crawler-user-agents.json
    private readonly List<string> _userAgentSignatures = new() // used for production
    {
        // ReSharper disable StringLiteralTypo
        @"Googlebot",
        @"AdsBot-Google",
        @"Feedfetcher-Google",
        @"Mediapartners",
        @"APIs-Google",
        @"bingbot",
        @"Slurp",
        @"wget",
        @"LinkedInBot",
        @"Python-urllib",
        @"python-requests",
        @"aiohttp",
        @"httpx",
        @"libwww-perl",
        @"httpunit",
        @"nutch",
        @"Go-http-client",
        @"phpcrawl",
        @"msnbot",
        @"jyxobot",
        @"FAST-WebCrawler",
        @"FAST Enterprise Crawler",
        @"BIGLOTRON",
        @"Teoma",
        @"convera",
        @"seekbot",
        @"Gigabot",
        @"Gigablast",
        @"exabot",
        @"ia_archiver",
        @"GingerCrawler",
        @"webmon",
        @"HTTrack",
        @"grub.org",
        @"UsineNouvelleCrawler",
        @"antibot",
        @"netresearchserver",
        @"speedy",
        @"fluffy",
        @"findlink",
        @"msrbot",
        @"panscient",
        @"yacybot",
        @"AISearchBot",
        @"ips-agent",
        @"tagoobot",
        @"MJ12bot",
        @"woriobot",
        @"yanga",
        @"buzzbot",
        @"mlbot",
        @"YandexBot",
        @"YandexImages",
        @"YandexAccessibilityBot",
        @"YandexMobileBot",
        @"YandexMetrika",
        @"YandexTurbo",
        @"YandexImageResizer",
        @"YandexVideo",
        @"YandexAdNet",
        @"YandexBlogs",
        @"YandexCalendar",
        @"YandexDirect",
        @"YandexFavicons",
        @"YaDirectFetcher",
        @"YandexForDomain",
        @"YandexMarket",
        @"YandexMedia",
        @"YandexMobileScreenShotBot",
        @"YandexNews",
        @"YandexOntoDB",
        @"YandexPagechecker",
        @"YandexPartner",
        @"YandexRCA",
        @"YandexSearchShop",
        @"YandexSitelinks",
        @"YandexSpravBot",
        @"YandexTracker",
        @"YandexVertis",
        @"YandexVerticals",
        @"YandexWebmaster",
        @"YandexScreenshotBot",
        @"purebot",
        @"Linguee Bot",
        @"CyberPatrol",
        @"voilabot",
        @"Baiduspider",
        @"citeseerxbot",
        @"spbot",
        @"twengabot",
        @"postrank",
        @"TurnitinBot",
        @"scribdbot",
        @"page2rss",
        @"sitebot",
        @"linkdex",
        @"Adidxbot",
        @"ezooms",
        @"dotbot",
        @"Mail.RU_Bot",
        @"discobot",
        @"heritrix",
        @"findthatfile",
        @"europarchive.org",
        @"NerdByNature.Bot",
        @"sistrix crawler",
        @"Ahrefs",
        @"fuelbot",
        @"CrunchBot",
        @"IndeedBot",
        @"mappydata",
        @"woobot",
        @"ZoominfoBot",
        @"PrivacyAwareBot",
        @"Multiviewbot",
        @"SWIMGBot",
        @"Grobbot",
        @"eright",
        @"Apercite",
        @"semanticbot",
        @"Aboundex",
        @"domaincrawler",
        @"wbsearchbot",
        @"summify",
        @"CCBot",
        @"edisterbot",
        @"seznambot",
        @"ec2linkfinder",
        @"gslfbot",
        @"aiHitBot",
        @"intelium_bot",
        @"facebookexternalhit",
        @"Yeti",
        @"RetrevoPageAnalyzer",
        @"lb-spider",
        @"Sogou",
        @"lssbot",
        @"careerbot",
        @"wotbox",
        @"wocbot",
        @"ichiro",
        @"DuckDuckBot",
        @"lssrocketcrawler",
        @"drupact",
        @"webcompanycrawler",
        @"acoonbot",
        @"openindexspider",
        @"gnam gnam spider",
        @"web-archive-net.com.bot",
        @"backlinkcrawler",
        @"coccoc",
        @"integromedb",
        @"content crawler spider",
        @"toplistbot",
        @"it2media-domain-crawler",
        @"ip-web-crawler.com",
        @"siteexplorer.info",
        @"elisabot",
        @"proximic",
        @"changedetection",
        @"arabot",
        @"WeSEE:Search",
        @"niki-bot",
        @"CrystalSemanticsBot",
        @"rogerbot",
        @"360Spider",
        @"psbot",
        @"InterfaxScanBot",
        @"CC Metadata Scaper",
        @"g00g1e.net",
        @"GrapeshotCrawler",
        @"urlappendbot",
        @"brainobot",
        @"fr-crawler",
        @"binlar",
        @"SimpleCrawler",
        @"Twitterbot",
        @"cXensebot",
        @"smtbot",
        @"bnf.fr_bot",
        @"A6-Indexer",
        @"ADmantX",
        @"Facebot",
        @"OrangeBot",
        @"memorybot",
        @"AdvBot",
        @"MegaIndex",
        @"SemanticScholarBot",
        @"ltx71",
        @"nerdybot",
        @"xovibot",
        @"BUbiNG",
        @"Qwantify",
        @"archive.org_bot",
        @"Applebot",
        @"TweetmemeBot",
        @"crawler4j",
        @"findxbot",
        @"SemrushBot",
        @"yoozBot",
        @"lipperhey",
        @"Y!J",
        @"Domain Re-Animator Bot",
        @"AddThis",
        @"Screaming Frog SEO Spider",
        @"MetaURI",
        @"Scrapy",
        @"Livelapbot",
        @"OpenHoseBot",
        @"CapsuleChecker",
        @"collection@infegy.com",
        @"IstellaBot",
        @"DeuSu",
        @"betaBot",
        @"Cliqzbot",
        @"MojeekBot",
        @"netEstate NE Crawler",
        @"SafeSearch microdata crawler",
        @"Gluten Free Crawler",
        @"Sonic",
        @"Sysomos",
        @"Trove",
        @"deadlinkchecker",
        @"Slack-ImgProxy",
        @"Embedly",
        @"RankActiveLinkBot",
        @"iskanie",
        @"SafeDNSBot",
        @"SkypeUriPreview",
        @"Veoozbot",
        @"Slackbot",
        @"redditbot",
        @"datagnionbot",
        @"Google-Adwords-Instant",
        @"adbeat_bot",
        @"WhatsApp",
        @"contxbot",
        @"pinterest.com.bot",
        @"electricmonk",
        @"GarlikCrawler",
        @"BingPreview",
        @"vebidoobot",
        @"FemtosearchBot",
        @"Yahoo Link Preview",
        @"MetaJobBot",
        @"DomainStatsBot",
        @"mindUpBot",
        @"Daum",
        @"Jugendschutzprogramm-Crawler",
        @"Xenu Link Sleuth",
        @"Pcore-HTTP",
        @"moatbot",
        @"KosmioBot",
        @"pingdom",
        @"AppInsights",
        @"PhantomJS",
        @"Gowikibot",
        @"PiplBot",
        @"Discordbot",
        @"TelegramBot",
        @"Jetslide",
        @"newsharecounts",
        @"James BOT",
        @"Barkrowler",
        @"TinEye",
        @"SocialRankIOBot",
        @"trendictionbot",
        @"Ocarinabot",
        @"epicbot",
        @"Primalbot",
        @"DuckDuckGo-Favicons-Bot",
        @"GnowitNewsbot",
        @"Leikibot",
        @"LinkArchiver",
        @"YaK",
        @"PaperLiBot",
        @"Digg Deeper",
        @"dcrawl",
        @"Snacktory",
        @"AndersPinkBot",
        @"Fyrebot",
        @"EveryoneSocialBot",
        @"Mediatoolkitbot",
        @"Luminator-robots",
        @"ExtLinksBot",
        @"SurveyBot",
        @"NING",
        @"okhttp",
        @"Nuzzel",
        @"omgili",
        @"PocketParser",
        @"YisouSpider",
        @"um-LN",
        @"ToutiaoSpider",
        @"MuckRack",
        @"Jamie's Spider",
        @"AHC",
        @"NetcraftSurveyAgent",
        @"Laserlikebot",
        @"Apache-HttpClient",
        @"AppEngine-Google",
        @"Jetty",
        @"Upflow",
        @"Thinklab",
        @"Traackr.com",
        @"Twurly",
        @"Mastodon",
        @"http_get",
        @"DnyzBot",
        @"botify",
        @"007ac9 Crawler",
        @"BehloolBot",
        @"BrandVerity",
        @"check_http",
        @"BDCbot",
        @"ZumBot",
        @"EZID",
        @"ICC-Crawler",
        @"ArchiveBot",
        @"LCC",
        @"filterdb.iss.netcrawler",
        @"BLP_bbot",
        @"BomboraBot",
        @"Buck",
        @"Companybook-Crawler",
        @"Genieo",
        @"magpie-crawler",
        @"MeltwaterNews",
        @"Moreover",
        @"newspaper",
        @"ScoutJet",
        @"sentry",
        @"StorygizeBot",
        @"UptimeRobot",
        @"OutclicksBot",
        @"seoscanners",
        @"Hatena",
        @"Google Web Preview",
        @"MauiBot",
        @"AlphaBot",
        @"SBL-BOT",
        @"IAS crawler",
        @"adscanner",
        @"Netvibes",
        @"acapbot",
        @"Baidu-YunGuanCe",
        @"bitlybot",
        @"blogmuraBot",
        @"Bot.AraTurka.com",
        @"bot-pge.chlooe.com",
        @"BoxcarBot",
        @"BTWebClient",
        @"ContextAd Bot",
        @"Digincore bot",
        @"Disqus",
        @"Feedly",
        @"Fetch",
        @"Fever",
        @"Flamingo_SearchEngine",
        @"FlipboardProxy",
        @"g2reader-bot",
        @"G2 Web Services",
        @"imrbot",
        @"K7MLWCBot",
        @"Kemvibot",
        @"Landau-Media-Spider",
        @"linkapediabot",
        @"vkShare",
        @"Siteimprove.com",
        @"BLEXBot",
        @"DareBoost",
        @"ZuperlistBot",
        @"Miniflux",
        @"Feedspot",
        @"Diffbot",
        @"SEOkicks",
        @"tracemyfile",
        @"Nimbostratus-Bot",
        @"zgrab",
        @"PR-CY.RU",
        @"AdsTxtCrawler",
        @"Datafeedwatch",
        @"Zabbix",
        @"TangibleeBot",
        @"google-xrawler",
        @"axios",
        @"Amazon CloudFront",
        @"Pulsepoint",
        @"CloudFlare-AlwaysOnline",
        @"Google-Structured-Data-Testing-Tool",
        @"WordupInfoSearch",
        @"WebDataStats",
        @"HttpUrlConnection",
        @"Seekport Crawler",
        @"ZoomBot",
        @"VelenPublicWebCrawler",
        @"MoodleBot",
        @"jpg-newsbot",
        @"outbrain",
        @"W3C_Validator",
        @"Validator.nu",
        @"W3C-checklink",
        @"W3C-mobileOK",
        @"W3C_I18n-Checker",
        @"FeedValidator",
        @"W3C_CSS_Validator",
        @"W3C_Unicorn",
        @"Google-PhysicalWeb",
        @"Blackboard",
        @"ICBot",
        @"BazQux",
        @"Twingly",
        @"Rivva",
        @"Experibot",
        @"awesomecrawler",
        @"Dataprovider.com",
        @"GroupHigh",
        @"theoldreader.com",
        @"AnyEvent",
        @"Uptimebot.org",
        @"Nmap Scripting Engine",
        @"2ip.ru",
        @"Clickagy",
        @"Caliperbot",
        @"MBCrawler",
        @"online-webceo-bot",
        @"B2B Bot",
        @"AddSearchBot",
        @"Google Favicon",
        @"HubSpot",
        @"Chrome-Lighthouse",
        @"HeadlessChrome",
        @"CheckMarkNetwork",
        @"www.uptime.com",
        @"Streamline3Bot",
        @"serpstatbot",
        @"MixnodeCache",
        @"curl",
        @"SimpleScraper",
        @"RSSingBot",
        @"Jooblebot",
        @"fedoraplanet",
        @"Friendica",
        @"NextCloud",
        @"Tiny Tiny RSS",
        @"RegionStuttgartBot",
        @"Bytespider",
        @"Datanyze",
        @"Google-Site-Verification",
        @"TrendsmapResolver",
        @"tweetedtimes",
        @"NTENTbot",
        @"Gwene",
        @"SimplePie",
        @"SearchAtlas",
        @"Superfeedr",
        @"feedbot",
        @"UT-Dorkbot",
        @"Amazonbot",
        @"SerendeputyBot",
        @"Eyeotabot",
        @"officestorebot",
        @"Neticle Crawler",
        @"SurdotlyBot",
        @"LinkisBot",
        @"AwarioSmartBot",
        @"AwarioRssBot",
        @"RyteBot",
        @"FreeWebMonitoring SiteChecker",
        @"AspiegelBot",
        @"NAVER Blog Rssbot",
        @"zenback bot",
        @"SentiBot",
        @"Domains Project",
        @"Pandalytics",
        @"VKRobot",
        @"bidswitchbot",
        @"tigerbot",
        @"NIXStatsbot",
        @"Atom Feed Robot",
        @"Curebot",
        @"PagePeeker",
        @"Vigil",
        @"rssbot",
        @"startmebot",
        @"JobboerseBot",
        @"seewithkids",
        @"NINJA bot",
        @"Cutbot",
        @"BublupBot",
        @"BrandONbot",
        @"RidderBot",
        @"Taboolabot",
        @"Dubbotbot",
        @"FindITAnswersbot",
        @"infoobot",
        @"Refindbot",
        @"BlogTraffic",
        @"SeobilityBot",
        @"Cincraw",
        @"Dragonbot",
        @"VoluumDSP-content-bot",
        @"FreshRSS",
        @"BitBot",
        @"PHP-Curl-Class",
        @"Google-Certificates-Bridge",
        @"centurybot",
        @"Viber",
        @"e.ventures Investment Crawler",
        @"evc-batch",
        @"PetalBot",
        @"virustotal",
        @"PTST",
        @"minicrawler",
        // ReSharper restore StringLiteralTypo
    }; 
    #endregion

    #region Theme
    private Theme Theme(string themeType) => _theme ??= themes.GetThemes().FirstOrDefault(item => item.Themes.Any(item => item.TypeName == themeType));
    private Theme _theme;

    #endregion

    #region SystemHtml
    private string SystemHtml(string html)
    {
        if (Executed) return html;
        var systemHtml =
            $"<style> {(OqtaneVersion >= new Version(3, 0, 2) ? "body" : "app")} > div:first-of-type {{ display: block !important }} </style>";
        if (!html.Contains(systemHtml, StringComparison.OrdinalIgnoreCase) && !Html.Contains(systemHtml, StringComparison.OrdinalIgnoreCase))
            html += systemHtml + Environment.NewLine;
        Executed = true;
        return html;
    }

    private Version OqtaneVersion => _oqtaneVersion ??= GetOqtaneVersion();
    private Version _oqtaneVersion;

    private static Version GetOqtaneVersion()
        => Version.TryParse(Oqtane.Shared.Constants.Version, out var ver) ? ver : new Version(1, 0);

    private bool Executed // for execution once per request
    {
        get => (httpContextAccessor?.HttpContext?.Items[ExecutedKey] as bool?) ?? false;
        set
        {
            if (httpContextAccessor?.HttpContext != null)
                httpContextAccessor.HttpContext.Items[ExecutedKey] = value;
        }
    }
    private const string ExecutedKey = "PrerenderServiceExecuted";
    #endregion

    #region Html
    private string Html // for execution once per request
    {
        get => (httpContextAccessor?.HttpContext?.Items[PrerenderHtmlFragmentKey] as string) ?? string.Empty;
        set
        {
            if (httpContextAccessor?.HttpContext != null)
                httpContextAccessor.HttpContext.Items[PrerenderHtmlFragmentKey] = value;
        }
    }
    private const string PrerenderHtmlFragmentKey = "PrerenderHtmlFragment"; 
    #endregion
}