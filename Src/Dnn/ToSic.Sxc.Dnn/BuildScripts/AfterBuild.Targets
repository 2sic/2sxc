<?xml version="1.0" encoding="utf-8"?>
<Project>

  <Target Name="PostBuild" AfterTargets="Build" Condition="'$(DnnTargets)' != ''">
    <Message Text="DnnTargets='$(DnnTargets)'" Importance="High"/>

    <!--Split the paths in DnnTargets into individual items-->
    <ItemGroup>
      <DnnRoot Include="$(DnnTargets)"/>
    </ItemGroup>

    <PropertyGroup>
      <DnnRootIdentityValue>%(DnnRoot.Identity)</DnnRootIdentityValue>
    </PropertyGroup>
    <Message Text="DnnRoot='$(DnnRootIdentityValue)'" Importance="High"/>
  </Target>

  <Target Name="PostBuildForEachItem" AfterTargets="PostBuild" DependsOnTargets="PostBuild" Outputs="%(DnnRoot.Identity)" Condition="'$(DnnTargets)' != ''">
    <Message Text="DnnRoot='%(DnnRoot.Identity)'" Importance="High"/>
    <PropertyGroup>
      <CurrentDnnRoot>%(DnnRoot.Identity)</CurrentDnnRoot>
      <BuildTarget>$(CurrentDnnRoot)DesktopModules/ToSic_SexyContent</BuildTarget>
    </PropertyGroup>
    <!-- Echo Statements -->
    <Message Text="BuildTarget='$(BuildTarget)'" Importance="High"/>

    <!-- XML documentation is generated in Release only -->
    <ItemGroup Condition="'$(Configuration)' == 'Release'">
      <!-- itmes included only in Release configuration -->
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.xml" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Dnn.xml" />
    </ItemGroup>
    
    <ItemGroup>
      <!-- Global / Shared 2sxc and EAV DLLs-->
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.Generate.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.Generate.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.HotBuild.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Code.HotBuild.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Custom.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Custom.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Engines.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Engines.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Images.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Images.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Services.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Services.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.WebApi.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.WebApi.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Eav*.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Eav*.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Lib*.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Lib*.pdb" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sys*.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sys*.pdb" />

      <!-- DNN specific DLLs -->
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Dnn*.dll" />
      <DnnBinInclude Include="$(MSBuildProjectDirectory)\bin\ToSic.Sxc.Dnn*.pdb" />

      <!-- 2sxc 13+ netstandard2.0/framework 4.7.2 assemblies -->
      <SxcDependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Bcl.AsyncInterfaces.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Bcl.HashCode.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.EntityFrameworkCore.Abstractions.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.EntityFrameworkCore.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.EntityFrameworkCore.Relational.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.EntityFrameworkCore.SqlServer.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Caching.Abstractions.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Caching.Memory.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Configuration.Abstractions.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Configuration.Binder.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Configuration.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Logging.Abstractions.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Logging.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Options.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Microsoft.Extensions.Primitives.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\Remotion.Linq.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Buffers.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Collections.Immutable.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.ComponentModel.Annotations.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Data.SqlClient.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Diagnostics.DiagnosticSource.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Interactive.Async.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.IO.Pipelines.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Memory.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Numerics.Vectors.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Runtime.CompilerServices.Unsafe.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Text.Encodings.Web.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Text.Json.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.Threading.Tasks.Extensions.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\System.ValueTuple.dll" />

      <!-- Other DLLs -->
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\bin\CsvHelper.dll" />

      <!-- DNN specific DLLs -->
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\Extensions\Imageflow\bin\*.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\koi\bin\*.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\razorblade\bin\*.dll" />
      <DependeciesInclude Include="$(MSBuildProjectDirectory)\razorblade-old\bin\*.dll" />

    </ItemGroup>

    <Copy SourceFiles="@(DnnBinInclude)" DestinationFolder="$(CurrentDnnRoot)/bin" />
    <CopyNewerFileVersion SourceFiles="@(DependeciesInclude)" DestinationFolder="$(CurrentDnnRoot)/bin" />
    <CopyNewerFileVersion SourceFiles="@(SxcDependeciesInclude)" DestinationFolder="$(CurrentDnnRoot)/bin/2sxc" />

    <!-- Copy Imageflow and dependecies -->
    <!-- include Imageflow folder -->
    <Exec Command="robocopy /S &quot;$(ProjectDir)Extensions/Imageflow/bin/&quot; &quot;$(CurrentDnnRoot)bin/&quot; /XF *.dll /XF *.dll.pending" IgnoreExitCode="true"/>
    <ItemGroup>
      <ImageflowAssemblyInclude Include="$(ProjectDir)\Extensions\Imageflow\bin\**\ToSic.*.dll" />
      <ImageflowDependeciesInclude Include="$(ProjectDir)\Extensions\Imageflow\bin\**\*.dll" Exclude="ToSic.*.dll"/>
      <ImageflowAssemblyInclude Include="$(ProjectDir)\Extensions\Imageflow\bin\**\imageflow.dll.pending" />
    </ItemGroup>
    <Copy SourceFiles="@(ImageflowAssemblyInclude)" DestinationFolder="$(CurrentDnnRoot)bin" />
    <CopyNewerFileVersion SourceFiles="@(ImageflowDependeciesInclude)" DestinationFolder="$(CurrentDnnRoot)bin" />
    
    <!-- Imageflow.dll Handling -->
    <!-- this is optimization for development, to prevent second DNN restart that happens by 'imageflow' module when file 'imageflow.dll.pending' exists in 'bin/runtimes/win-???/native/' -->
    <!-- when exists 'imageflow.dll.pending' it will rename it to 'imageflow.dll' ( but first need to remove old 'imageflow.dll' if one exists ) -->
    <!-- note: DEL and RENAME cmds should have consistend backslash based path, we should not mix \ / becuase that is not working as expected -->
    <Exec Command="if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-arm64/native/imageflow.dll.pending&quot; ( ( if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-arm64/native/imageflow.dll&quot; del &quot;$(CurrentDnnRoot)bin\runtimes\win-arm64\native\imageflow.dll&quot; ) &amp; rename &quot;$(CurrentDnnRoot)bin\runtimes\win-arm64\native\imageflow.dll.pending&quot; imageflow.dll )" IgnoreExitCode="true"/>
    <Exec Command="if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-x64/native/imageflow.dll.pending&quot; ( ( if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-x64/native/imageflow.dll&quot; del &quot;$(CurrentDnnRoot)bin\runtimes\win-x64\native\imageflow.dll&quot; ) &amp; rename &quot;$(CurrentDnnRoot)bin\runtimes\win-x64\native\imageflow.dll.pending&quot; imageflow.dll )" IgnoreExitCode="true"/>
    <Exec Command="if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-x86/native/imageflow.dll.pending&quot; ( ( if exist &quot;$(CurrentDnnRoot)bin/runtimes/win-x86/native/imageflow.dll&quot; del &quot;$(CurrentDnnRoot)bin\runtimes\win-x86\native\imageflow.dll&quot; ) &amp; rename &quot;$(CurrentDnnRoot)bin\runtimes\win-x86\native\imageflow.dll.pending&quot; imageflow.dll )" IgnoreExitCode="true"/>

    <!--Copy the data folders-->
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)../../Data/App_Data/&quot; &quot;$(BuildTarget)/App_Data/&quot; /XO /XF &quot;$(BuildTarget)/App_Data/system-custom/configurations/features.json&quot; /XF &quot;$(BuildTarget)/App_Data/system-custom/configurations/default.license.json&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /S &quot;$(ProjectDir)../../../../2sxc-dev-materials/App_Data/&quot; &quot;$(BuildTarget)/App_Data/&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)../../Data/assets/ &quot; &quot;$(BuildTarget)/assets/&quot;" IgnoreExitCode="true"/>

    <!--Add the DNN specific content-types-->
    <Exec Command="robocopy /S &quot;$(ProjectDir)../../Data-Dnn/App_Data/system/&quot; &quot;$(BuildTarget)/App_Data/system/&quot;" IgnoreExitCode="true"/>

    <!--Copy DNN JavaScripts and Bridge-->
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)ClientScripts/&quot; &quot;$(BuildTarget)/ClientScripts/&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)DnnWebForms/&quot; &quot;$(BuildTarget)/DnnWebForms/&quot;" IgnoreExitCode="true"/>

    <!--Copy 2sxc JS stuff (order of commands is important) -->
    <!--
    The commented script was initially designed to automate the deployment of JavaScript assets for the 2sxc module in a DNN development environment as part of the 2sxc backend build. 
    It has been commented out to prevent unexpected behavior for frontend (JavaScript) developers, particularly the issue of the latest JavaScript assets in the DNN development environment 
    being overwritten with older JavaScript assets from'2sxc-sources\_latest'.
    
    Backend developers are advised to manually copy all JavaScript assets from '2sxc-sources\_latest' to the DNN development environment at '2sxc-dnn\Website\DesktopModules\ToSIC_SexyContent'. 
    This ensures the latest version of JavaScript assets are used, as this step no longer occurs automatically with each update of the 2sxc version in DNN dev env. 
    Another option is to run npm scripts in 'eav-ui', as is the practice among frontend (JavaScript) developers.
    -->
    <!--<Exec Command="robocopy /MIR &quot;$(Source)/js/&quot; &quot;$(BuildTarget)/js/&quot;" IgnoreExitCode="true" Condition="Exists('$(Source)')"/>
    <Exec Command="robocopy /MIR &quot;$(Source)/system/&quot; &quot;$(BuildTarget)/system/&quot;" IgnoreExitCode="true" Condition="Exists('$(Source)')"/>
    <Exec Command="robocopy /MIR &quot;$(Source)/dist/&quot; &quot;$(BuildTarget)/dist/&quot;" IgnoreExitCode="true" Condition="Exists('$(Source)')"/>-->
    <Exec Command="robocopy /S &quot;$(ProjectDir)dist/&quot; &quot;$(BuildTarget)/dist/&quot; &quot;Default.aspx&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)Extensions/&quot; &quot;$(BuildTarget)/Extensions/&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)ImportExport/&quot; &quot;$(BuildTarget)/ImportExport/&quot;" IgnoreExitCode="true"/>
    <Exec Command="robocopy /MIR &quot;$(ProjectDir)App_LocalResources/&quot; &quot;$(BuildTarget)/App_LocalResources/&quot;" IgnoreExitCode="true"/>

    <!-- Xcopy Commands -->
    <Exec Command="xcopy &quot;$(ProjectDir)View.ascx&quot; &quot;$(BuildTarget)&quot; /y" IgnoreExitCode="true"/>
    <Exec Command="xcopy &quot;$(ProjectDir)icon.png&quot; &quot;$(BuildTarget)&quot; /y" IgnoreExitCode="true"/>
    <Exec Command="xcopy &quot;$(ProjectDir)icon-app.png&quot; &quot;$(BuildTarget)&quot; /y" IgnoreExitCode="true"/>
    <Exec Command="xcopy &quot;$(ProjectDir)WebConfigTemplate.config&quot; &quot;$(BuildTarget)&quot; /y" IgnoreExitCode="true"/>
    <!-- ... Add other xcopy commands similarly ... -->

    <!-- Echo Statements -->
    <Message Text="Copied all files to this DNN target: '$(CurrentDnnRoot)'" Importance="High"/>
    <Message Text="So DesktopModules Folder is '$(BuildTarget)'" Importance="High"/>
  </Target>

</Project>
